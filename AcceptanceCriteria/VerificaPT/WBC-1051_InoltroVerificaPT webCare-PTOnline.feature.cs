// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (http://www.specflow.org/).
//      SpecFlow Version:2.2.0.0
//      SpecFlow Generator Version:2.2.0.0
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace AcceptanceCriteria.VerificaPT
{
    using TechTalk.SpecFlow;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "2.2.0.0")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [TechTalk.SpecRun.FeatureAttribute("WBC-1051_InoltroVerificaPT webCare-PTOnline", Description="\tIN ORDER TO inoltrare le verifiche PT nel periodo di transizione WebCare-PTOnlin" +
        "e\r\n\tAS studiofarma\r\n\tI WANT TO che WBC inoltri le richieste di verifica di OMALI" +
        "ZUMAB nel caso in cui su WBC non viene trovato il PT e restituisca il CodicePT t" +
        "rovato.", SourceFile="VerificaPT\\WBC-1051_InoltroVerificaPT webCare-PTOnline.feature", SourceLine=0)]
    public partial class WBC_1051_InoltroVerificaPTWebCare_PTOnlineFeature
    {
        
        private TechTalk.SpecFlow.ITestRunner testRunner;
        
#line 1 "WBC-1051_InoltroVerificaPT webCare-PTOnline.feature"
#line hidden
        
        [TechTalk.SpecRun.FeatureInitialize()]
        public virtual void FeatureSetup()
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner();
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("en-US"), "WBC-1051_InoltroVerificaPT webCare-PTOnline", "\tIN ORDER TO inoltrare le verifiche PT nel periodo di transizione WebCare-PTOnlin" +
                    "e\r\n\tAS studiofarma\r\n\tI WANT TO che WBC inoltri le richieste di verifica di OMALI" +
                    "ZUMAB nel caso in cui su WBC non viene trovato il PT e restituisca il CodicePT t" +
                    "rovato.", ProgrammingLanguage.CSharp, ((string[])(null)));
            testRunner.OnFeatureStart(featureInfo);
        }
        
        [TechTalk.SpecRun.FeatureCleanup()]
        public virtual void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        public virtual void TestInitialize()
        {
        }
        
        [TechTalk.SpecRun.ScenarioCleanup()]
        public virtual void ScenarioTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public virtual void ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioStart(scenarioInfo);
        }
        
        public virtual void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        public virtual void FeatureBackground()
        {
#line 6
#line hidden
            TechTalk.SpecFlow.Table table1 = new TechTalk.SpecFlow.Table(new string[] {
                        "Minsan",
                        "Descrizione",
                        "ATC",
                        "FormaFarmaceutica",
                        "UnitàPosologiche",
                        "Grammatura"});
            table1.AddRow(new string[] {
                        "036892053",
                        "XOLAIR 1SIR 75MG",
                        "R03DX05",
                        "SOLUZIONE INIETTABILE",
                        "1",
                        "75 mg"});
            table1.AddRow(new string[] {
                        "036892089",
                        "XOLAIR 1SIR 150MG",
                        "R03DX05",
                        "SOLUZIONE INIETTABILE",
                        "1",
                        "150 mg"});
#line 7
 testRunner.Given("i seguenti dati dalla BD", ((string)(null)), table1, "Given ");
#line hidden
            TechTalk.SpecFlow.Table table2 = new TechTalk.SpecFlow.Table(new string[] {
                        "Posologia",
                        "Grammatura 75mg",
                        "Grammatura 150mg"});
            table2.AddRow(new string[] {
                        "75",
                        "1",
                        "0"});
            table2.AddRow(new string[] {
                        "150",
                        "0",
                        "1"});
            table2.AddRow(new string[] {
                        "225",
                        "1",
                        "1"});
            table2.AddRow(new string[] {
                        "300",
                        "0",
                        "2"});
            table2.AddRow(new string[] {
                        "375",
                        "1",
                        "2"});
            table2.AddRow(new string[] {
                        "450",
                        "0",
                        "3"});
            table2.AddRow(new string[] {
                        "525",
                        "1",
                        "3"});
            table2.AddRow(new string[] {
                        "600",
                        "0",
                        "4"});
#line 11
 testRunner.And("le seguenti combinazioni di unità posologiche di somministrazioni dell\'OMALIZIMAB" +
                    "", ((string)(null)), table2, "And ");
#line hidden
            TechTalk.SpecFlow.Table table3 = new TechTalk.SpecFlow.Table(new string[] {
                        "CodiceFiscale",
                        "Guid"});
            table3.AddRow(new string[] {
                        "MDGDGI70B12E704B",
                        "7a2c3353-12b6-47b1-b566-3f2779f6fc9d"});
#line 21
 testRunner.And("il codice fiscale ha il seguente guid", ((string)(null)), table3, "And ");
#line hidden
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("1. Inoltro Chiamata", SourceLine=24)]
        public virtual void _1_InoltroChiamata()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("1. Inoltro Chiamata", ((string[])(null)));
#line 25
this.ScenarioSetup(scenarioInfo);
#line 6
this.FeatureBackground();
#line hidden
            TechTalk.SpecFlow.Table table4 = new TechTalk.SpecFlow.Table(new string[] {
                        "CodicePT",
                        "Confezioni",
                        "Minsan",
                        "DataRicetta",
                        "DataErogazione",
                        "NumeroRicetta",
                        "CodiceFarmacia",
                        "CodiceFiscale"});
            table4.AddRow(new string[] {
                        "NH6F5J20K2C5TCPD",
                        "2",
                        "036892053",
                        "2017-09-06",
                        "2017-09-07",
                        "120171000000001",
                        "1234",
                        "MDGDGI70B12E704B"});
#line 26
 testRunner.Given("La seguente Erogazione ricevuta", ((string)(null)), table4, "Given ");
#line hidden
            TechTalk.SpecFlow.Table table5 = new TechTalk.SpecFlow.Table(new string[] {
                        "Minsan",
                        "Confezioni",
                        "DataRicetta",
                        "CodiceFiscale"});
            table5.AddRow(new string[] {
                        "036892053",
                        "2",
                        "13/07/2017",
                        "MDGDGI70B12E704B"});
#line 29
 testRunner.When("viene effettuata la chiamata al servizio Eroga", ((string)(null)), table5, "When ");
#line hidden
            TechTalk.SpecFlow.Table table6 = new TechTalk.SpecFlow.Table(new string[] {
                        "Esito",
                        "ConfezioniAutorizzate",
                        "ConfezioniResidue",
                        "DataInizioPeriodo",
                        "DataFinePeriodo",
                        "DataInizioPiano",
                        "DataFinePiano",
                        "CodicePT",
                        "KeyError",
                        "DescrizioneErrore"});
            table6.AddRow(new string[] {
                        "true",
                        "2",
                        "1",
                        "01/07/2017",
                        "25/08/2017",
                        "01/07/2017",
                        "31/12/2017",
                        "NH6F5J20K2C5TCPD",
                        "5",
                        "RESIDUO_INSUFFICIENTE"});
#line 32
 testRunner.Then("la risposta è la seguente", ((string)(null)), table6, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("2. PT presente in WBC e PTOL", SourceLine=37)]
        public virtual void _2_PTPresenteInWBCEPTOL()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("2. PT presente in WBC e PTOL", ((string[])(null)));
#line 38
this.ScenarioSetup(scenarioInfo);
#line 6
this.FeatureBackground();
#line hidden
            TechTalk.SpecFlow.Table table7 = new TechTalk.SpecFlow.Table(new string[] {
                        "ATC",
                        "FormaFarmaceutica",
                        "DataInizio",
                        "Prescrizione",
                        "Posologia",
                        "Frequenza",
                        "Durata",
                        "GuidCodiceFiscale",
                        "CodicePT"});
            table7.AddRow(new string[] {
                        "R03DX05",
                        "SOLUZIONE INIETTABILE",
                        "01/07/2017",
                        "525 mg ogni 4 settimane per 6 mesi",
                        "525 mg",
                        "4 settimane",
                        "6 mesi",
                        "7a2c3353-12b6-47b1-b566-3f2779f6fc9d",
                        "NH6F5J20K2C5TCPD"});
#line 39
 testRunner.Given("Il seguente piano terapeutico su PTOL", ((string)(null)), table7, "Given ");
#line hidden
            TechTalk.SpecFlow.Table table8 = new TechTalk.SpecFlow.Table(new string[] {
                        "CodiceFiscale",
                        "Minsan",
                        "DataInizioPiano",
                        "DataFinePiano",
                        "Prescrizione"});
            table8.AddRow(new string[] {
                        "MDGDGI70B12E704B",
                        "036892053",
                        "01/07/2017",
                        "31/07/2017",
                        "1 FIALA OGNI 2 SETTIMANE PER 1 MESE"});
#line 42
 testRunner.And("Il seguente piano terapeutico su WebCare", ((string)(null)), table8, "And ");
#line hidden
            TechTalk.SpecFlow.Table table9 = new TechTalk.SpecFlow.Table(new string[] {
                        "Minsan",
                        "Confezioni",
                        "DataRicetta",
                        "CodiceFiscale"});
            table9.AddRow(new string[] {
                        "036892053",
                        "2",
                        "13/07/2017",
                        "MDGDGI70B12E704B"});
#line 45
 testRunner.When("viene effettuata la chiamata al servizio VerificaPT con i seguenti parametri", ((string)(null)), table9, "When ");
#line hidden
            TechTalk.SpecFlow.Table table10 = new TechTalk.SpecFlow.Table(new string[] {
                        "Esito",
                        "ConfezioniAutorizzate",
                        "ConfezioniResidue",
                        "DataInizioPeriodo",
                        "DataFinePeriodo",
                        "DataInizioPiano",
                        "DataFinePiano",
                        "CodicePT",
                        "KeyError",
                        "DescrizioneErrore"});
            table10.AddRow(new string[] {
                        "true",
                        "2",
                        "2",
                        "01/07/2017",
                        "31/07/2017",
                        "01/07/2017",
                        "31/07/2017",
                        "",
                        "",
                        ""});
#line 48
 testRunner.Then("la risposta è la seguente", ((string)(null)), table10, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("3. PT non presente né in WBC né in PTOL", SourceLine=52)]
        public virtual void _3_PTNonPresenteNeInWBCNeInPTOL()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("3. PT non presente né in WBC né in PTOL", ((string[])(null)));
#line 53
this.ScenarioSetup(scenarioInfo);
#line 6
this.FeatureBackground();
#line hidden
            TechTalk.SpecFlow.Table table11 = new TechTalk.SpecFlow.Table(new string[] {
                        "ATC",
                        "FormaFarmaceutica",
                        "Data",
                        "",
                        "GuidCodiceFiscale"});
            table11.AddRow(new string[] {
                        "R03DX05",
                        "SOLUZIONE INIETTABILE",
                        "13/07/2017",
                        "",
                        "7a2c3353-12b6-47b1-b566-3f2779f6fc9d"});
#line 54
 testRunner.Given("Nessun piano terapeutico su PTOL per che abbia questi dati", ((string)(null)), table11, "Given ");
#line hidden
            TechTalk.SpecFlow.Table table12 = new TechTalk.SpecFlow.Table(new string[] {
                        "CodiceFiscale",
                        "Minsan",
                        "Data"});
            table12.AddRow(new string[] {
                        "MDGDGI70B12E704B",
                        "036892053",
                        "13/07/2017"});
#line 57
 testRunner.And("su WBC non è presente nessun PT che abbia questi dati", ((string)(null)), table12, "And ");
#line hidden
            TechTalk.SpecFlow.Table table13 = new TechTalk.SpecFlow.Table(new string[] {
                        "Minsan",
                        "Confezioni",
                        "DataRicetta",
                        "CodiceFiscale"});
            table13.AddRow(new string[] {
                        "036892053",
                        "2",
                        "13/07/2017",
                        "MDGDGI70B12E704B"});
#line 60
 testRunner.When("viene effettuata la chiamata al servizio VerificaPT con i seguenti parametri", ((string)(null)), table13, "When ");
#line hidden
            TechTalk.SpecFlow.Table table14 = new TechTalk.SpecFlow.Table(new string[] {
                        "Esito",
                        "ConfezioniAutorizzate",
                        "ConfezioniResidue",
                        "DataInizioPeriodo",
                        "DataFinePeriodo",
                        "DataInizioPiano",
                        "DataFinePiano",
                        "KeyError",
                        "DescrizioneErrore",
                        "CodicePT"});
            table14.AddRow(new string[] {
                        "true",
                        "0",
                        "0",
                        "",
                        "",
                        "",
                        "",
                        "2",
                        "PT_INESISTENTE",
                        ""});
#line 63
 testRunner.Then("la risposta è la seguente", ((string)(null)), table14, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("4. PT scaduto su WBC e presente PTOL", SourceLine=66)]
        public virtual void _4_PTScadutoSuWBCEPresentePTOL()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("4. PT scaduto su WBC e presente PTOL", ((string[])(null)));
#line 67
this.ScenarioSetup(scenarioInfo);
#line 6
this.FeatureBackground();
#line hidden
            TechTalk.SpecFlow.Table table15 = new TechTalk.SpecFlow.Table(new string[] {
                        "ATC",
                        "FormaFarmaceutica",
                        "DataInizio",
                        "Prescrizione",
                        "Posologia",
                        "Frequenza",
                        "Durata",
                        "GuidCodiceFiscale",
                        "CodicePT"});
            table15.AddRow(new string[] {
                        "R03DX05",
                        "SOLUZIONE INIETTABILE",
                        "01/07/2017",
                        "525 mg ogni 4 settimane per 6 mesi",
                        "525 mg",
                        "4 settimane",
                        "6 mesi",
                        "7a2c3353-12b6-47b1-b566-3f2779f6fc9d",
                        "NH6F5J20K2C5TCPD"});
#line 68
 testRunner.Given("Il seguente piano terapeutico su PTOL", ((string)(null)), table15, "Given ");
#line hidden
            TechTalk.SpecFlow.Table table16 = new TechTalk.SpecFlow.Table(new string[] {
                        "CodiceFiscale",
                        "Minsan",
                        "DataInizioPiano",
                        "DataFinePiano",
                        "Prescrizione"});
            table16.AddRow(new string[] {
                        "MDGDGI70B12E704B",
                        "036892053",
                        "01/06/2017",
                        "30/06/2017",
                        "1 FIALA OGNI 2 SETTIMANE PER 1 MESE"});
#line 71
 testRunner.And("Il seguente piano terapeutico su WebCare", ((string)(null)), table16, "And ");
#line hidden
            TechTalk.SpecFlow.Table table17 = new TechTalk.SpecFlow.Table(new string[] {
                        "Minsan",
                        "Confezioni",
                        "DataRicetta",
                        "CodiceFiscale"});
            table17.AddRow(new string[] {
                        "036892053",
                        "2",
                        "13/07/2017",
                        "MDGDGI70B12E704B"});
#line 74
 testRunner.When("viene effettuata la chiamata al servizio VerificaPT con i seguenti parametri", ((string)(null)), table17, "When ");
#line hidden
            TechTalk.SpecFlow.Table table18 = new TechTalk.SpecFlow.Table(new string[] {
                        "Esito",
                        "ConfezioniAutorizzate",
                        "ConfezioniResidue",
                        "DataInizioPeriodo",
                        "DataFinePeriodo",
                        "DataInizioPiano",
                        "DataFinePiano",
                        "CodicePT",
                        "KeyError",
                        "DescrizioneErrore"});
            table18.AddRow(new string[] {
                        "true",
                        "2",
                        "1",
                        "01/07/2017",
                        "25/08/2017",
                        "01/07/2017",
                        "31/12/2017",
                        "NH6F5J20K2C5TCPD",
                        "5",
                        "RESIDUO_INSUFFICIENTE"});
#line 77
 testRunner.Then("la risposta è la seguente", ((string)(null)), table18, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("5. PT futuro su WBC e presente PTOL", SourceLine=81)]
        public virtual void _5_PTFuturoSuWBCEPresentePTOL()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("5. PT futuro su WBC e presente PTOL", ((string[])(null)));
#line 82
this.ScenarioSetup(scenarioInfo);
#line 6
this.FeatureBackground();
#line hidden
            TechTalk.SpecFlow.Table table19 = new TechTalk.SpecFlow.Table(new string[] {
                        "ATC",
                        "FormaFarmaceutica",
                        "DataInizio",
                        "Prescrizione",
                        "Posologia",
                        "Frequenza",
                        "Durata",
                        "GuidCodiceFiscale",
                        "CodicePT"});
            table19.AddRow(new string[] {
                        "R03DX05",
                        "SOLUZIONE INIETTABILE",
                        "01/07/2017",
                        "525 mg ogni 4 settimane per 6 mesi",
                        "525 mg",
                        "4 settimane",
                        "6 mesi",
                        "7a2c3353-12b6-47b1-b566-3f2779f6fc9d",
                        "NH6F5J20K2C5TCPD"});
#line 83
 testRunner.Given("Il seguente piano terapeutico su PTOL", ((string)(null)), table19, "Given ");
#line hidden
            TechTalk.SpecFlow.Table table20 = new TechTalk.SpecFlow.Table(new string[] {
                        "CodiceFiscale",
                        "Minsan",
                        "DataInizioPiano",
                        "DataFinePiano",
                        "Prescrizione"});
            table20.AddRow(new string[] {
                        "MDGDGI70B12E704B",
                        "036892053",
                        "01/08/2017",
                        "31/08/2017",
                        "1 FIALA OGNI 2 SETTIMANE PER 1 MESE"});
#line 86
 testRunner.And("Il seguente piano terapeutico su WebCare", ((string)(null)), table20, "And ");
#line hidden
            TechTalk.SpecFlow.Table table21 = new TechTalk.SpecFlow.Table(new string[] {
                        "Minsan",
                        "Confezioni",
                        "DataRicetta",
                        "CodiceFiscale"});
            table21.AddRow(new string[] {
                        "036892053",
                        "2",
                        "13/07/2017",
                        "MDGDGI70B12E704B"});
#line 89
 testRunner.When("viene effettuata la chiamata al servizio VerificaPT con i seguenti parametri", ((string)(null)), table21, "When ");
#line hidden
            TechTalk.SpecFlow.Table table22 = new TechTalk.SpecFlow.Table(new string[] {
                        "Esito",
                        "ConfezioniAutorizzate",
                        "ConfezioniResidue",
                        "DataInizioPeriodo",
                        "DataFinePeriodo",
                        "DataInizioPiano",
                        "DataFinePiano",
                        "CodicePT",
                        "KeyError",
                        "DescrizioneErrore"});
            table22.AddRow(new string[] {
                        "true",
                        "2",
                        "1",
                        "01/07/2017",
                        "25/08/2017",
                        "01/07/2017",
                        "31/12/2017",
                        "NH6F5J20K2C5TCPD",
                        "5",
                        "RESIDUO_INSUFFICIENTE"});
#line 92
 testRunner.Then("la risposta è la seguente", ((string)(null)), table22, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("6. GUID Codice Fiscale non presente su WBC", SourceLine=97)]
        public virtual void _6_GUIDCodiceFiscaleNonPresenteSuWBC()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("6. GUID Codice Fiscale non presente su WBC", ((string[])(null)));
#line 98
this.ScenarioSetup(scenarioInfo);
#line 6
this.FeatureBackground();
#line hidden
            TechTalk.SpecFlow.Table table23 = new TechTalk.SpecFlow.Table(new string[] {
                        "ATC",
                        "FormaFarmaceutica",
                        "DataInizio",
                        "Prescrizione",
                        "Posologia",
                        "Frequenza",
                        "Durata",
                        "GuidCodiceFiscale",
                        "CodicePT"});
            table23.AddRow(new string[] {
                        "R03DX05",
                        "SOLUZIONE INIETTABILE",
                        "01/07/2017",
                        "525 mg ogni 4 settimane per 6 mesi",
                        "525 mg",
                        "4 settimane",
                        "6 mesi",
                        "7a2c3353-12b6-47b1-b566-3f2779f6fc9d",
                        "NH6F5J20K2C5TCPD"});
#line 99
 testRunner.Given("Il seguente piano terapeutico su PTOL", ((string)(null)), table23, "Given ");
#line hidden
            TechTalk.SpecFlow.Table table24 = new TechTalk.SpecFlow.Table(new string[] {
                        "CodiceFiscale",
                        "Guid"});
            table24.AddRow(new string[] {
                        "MDGDGI70B12E704B",
                        "null"});
#line 102
 testRunner.And("il codice fiscale ha il seguente guid", ((string)(null)), table24, "And ");
#line hidden
            TechTalk.SpecFlow.Table table25 = new TechTalk.SpecFlow.Table(new string[] {
                        "CodiceFiscale",
                        "Minsan",
                        "Data"});
            table25.AddRow(new string[] {
                        "MDGDGI70B12E704B",
                        "036892053",
                        "13/07/2017"});
#line 105
 testRunner.And("su WBC non è presente nessun PT che abbia questi dati", ((string)(null)), table25, "And ");
#line hidden
            TechTalk.SpecFlow.Table table26 = new TechTalk.SpecFlow.Table(new string[] {
                        "Minsan",
                        "Confezioni",
                        "DataRicetta",
                        "CodiceFiscale"});
            table26.AddRow(new string[] {
                        "036892053",
                        "2",
                        "13/07/2017",
                        "MDGDGI70B12E704B"});
#line 108
 testRunner.When("viene effettuata la chiamata al servizio VerificaPT con i seguenti parametri", ((string)(null)), table26, "When ");
#line hidden
            TechTalk.SpecFlow.Table table27 = new TechTalk.SpecFlow.Table(new string[] {
                        "Esito",
                        "ConfezioniAutorizzate",
                        "ConfezioniResidue",
                        "DataInizioPeriodo",
                        "DataFinePeriodo",
                        "DataInizioPiano",
                        "DataFinePiano",
                        "KeyError",
                        "DescrizioneErrore",
                        "CodicePT"});
            table27.AddRow(new string[] {
                        "true",
                        "0",
                        "0",
                        "",
                        "",
                        "",
                        "",
                        "2",
                        "PT_INESISTENTE",
                        ""});
#line 111
 testRunner.Then("la risposta è la seguente", ((string)(null)), table27, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [TechTalk.SpecRun.TestRunCleanup()]
        public virtual void TestRunCleanup()
        {
            TechTalk.SpecFlow.TestRunnerManager.GetTestRunner().OnTestRunEnd();
        }
    }
}
#pragma warning restore
#endregion
